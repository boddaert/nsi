import random
import matplotlib.pyplot as plt

def initialise_filons(n : int)->list:
    """
    :param n (int): Nombre d'éléments
    :return list: Renvoie une liste de nombres aléatoires de taille n
    """
    return [random.randint(1,20) for _ in range(n)]
        
def explore(filons_reels : list)->int:
    """
    :param filons_reels (list): Liste des filons existant
    :return int: Renvoie un indice aléatoire de la liste filons_reels
    """
    return random.randint(0, len(filons_reels)-1)
    
def exploite(filons_connus : list)->int:
    """
    :param filons_connus (list): Liste des filons que l'on connaît
    :return int: Renvoie l'indice du maximum de la liste filons_connus
    """
    ind_max = 0
    for i in range(len(filons_connus)):
        if filons_connus[i] > filons_connus[ind_max] :
            ind_max = i
    return ind_max

def dilemme_exploration_exploitation(n : int,epsilon : float)->float:
    """
    :param n (int): Nombre de filons
    :param epsilon (float): probabilité epsilon
    :return float: Renvoie la moyenne des récompenses selon une probabilité epsilon d'explorer ou d'exploiter
    """
    filons_reels = initialise_filons(n)
    filons_connus = [0 for _ in range(n)]
    recompense_ieme = 0
    list_recompenses = []
    moyenne = []
    for _ in range(500):
        if random.uniform(0,1) <= epsilon :
            ind = explore(filons_reels)
            filons_connus[ind] = filons_reels[ind]
        else :
            ind = exploite(filons_connus)
        recompense_ieme = filons_connus[ind]
        list_recompenses.append(recompense_ieme)
        moyenne.append(sum(list_recompenses)/len(list_recompenses))
    return moyenne
        
def stats():
    """
    Création d'un graphique représentant la moyenne des récompenses pour 3 probabilités epsilon
    """
    n = 20
    eps_001 = dilemme_exploration_exploitation(n, 0.01)
    eps_01 = dilemme_exploration_exploitation(n, 0.1)
    eps_03 = dilemme_exploration_exploitation(n, 0.3)
    
    plt.plot(eps_001, label="0.01")
    plt.plot(eps_01 , label="0.1")
    plt.plot(eps_03 , label="0.3")
    
    plt.title("Moyenne des récompenses en fonction d'epsilon")
    plt.legend()
    plt.ylabel("Moyenne des récompenses")
    plt.xlabel("Nombres d'itérations")
    #plt.savefig("../img/moy_exploration_exploitation.png")
    plt.show()